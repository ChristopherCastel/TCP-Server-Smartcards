/*
 * client_engine.h
 *
 *  Created on: 26 Feb 2019
 *      Author: Castel Christopher
 */

#ifndef CLIENT_ENGINE_H_
#define CLIENT_ENGINE_H_

#include <atomic>
#include <thread>
#include <ws2tcpip.h>

#include "response_packet.h"
#include "terminal/terminals/pcsc.h"

namespace client {

class ClientEngine {
private:
	std::string ip;
	std::string port;
	std::string name;
	std::thread requests_thread;
	std::atomic<bool> stop_flag { false };
	PCSC terminal;
public:
	ClientEngine();

	virtual ~ClientEngine();

	responses::ResponsePacket mock();

	responses::ResponsePacket connectClient();

	responses::ResponsePacket handleRequest(SOCKET socket, std::string request);

	responses::ResponsePacket initClient(std::string path);

	responses::ResponsePacket waitingRequests(SOCKET socket);
};

} /* namespace client */

#endif /* CLIENT_ENGINE_H_ */
